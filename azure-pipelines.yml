trigger:
- '*'

pool:
  vmImage: 'MyAgentPool'
  demands:
    - npm

variables:
  buildConfiguration: 'Release'
  wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
  dotnetSdkVersion: '3.1.100'

jobs: 
- job: Bypass_parallelism
  strategy:
    maxParallel: 0
  steps:  
  - task: UseDotNet@2
    displayName: 'Use .NET Core SDK $(dotnetSdkVersion)'
    inputs:
      version: '$(dotnetSdkVersion)'

- job: Run_npm
  dependsOn: Bypass_parallelism
  strategy:
    maxParallel: 0
  steps:
  - task: Npm@1
    displayName: 'Run npm install'
    inputs:
      verbose: false

- job: Sass_Script
  dependsOn: Run_npm
  strategy:
    maxParallel: 0
  steps:   
  - script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
    displayName: 'Compile Sass assets'

- job: Run_gulp
  dependsOn: Sass_Script
  strategy:
    maxParallel: 0
  steps:
  - task: gulp@1
    displayName: 'Run gulp tasks'

- job: Write_build
  dependsOn: Run_gulp
  strategy:
    maxParallel: 0
  steps: 
  - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
    displayName: 'Write build info'
    workingDirectory: $(wwwrootDir)

- job: Restore_dependencies
  dependsOn: Write_build
  strategy:
    maxParallel: 0
  steps:
  - task: DotNetCoreCLI@2
    displayName: 'Restore project dependencies'
    inputs:
      command: 'restore'
      projects: '**/*.csproj'

- job: Build_project
  dependsOn: Restore_dependencies
  strategy:
    maxParallel: 0
  steps:
  - task: DotNetCoreCLI@2
    displayName: 'Build the project - $(buildConfiguration)'
    inputs:
      command: 'build'
      arguments: '--no-restore --configuration $(buildConfiguration)'
      projects: '**/*.csproj'

- job: Publish_project
  dependsOn: Build_project
  strategy:
    maxParallel: 0
  steps:
  - task: DotNetCoreCLI@2
    displayName: 'Publish the project - $(buildConfiguration)'
    inputs:
      command: 'publish'
      projects: '**/*.csproj'
      publishWebProjects: false
      arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
      zipAfterPublish: true

- job: Publish_Artifact
  dependsOn: Publish_project
  strategy:
    maxParallel: 0
  steps:
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'
    condition: succeeded()
